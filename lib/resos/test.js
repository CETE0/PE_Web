/**
 * Script de prueba para la integraci√≥n con resOS API
 * Ejecutar con: node lib/resos/test.js
 */

const { createReservation, validateReservationData } = require('./bookings');

// Datos de prueba para la reserva
const testData = {
  nombre: 'Juan P√©rez',
  telefono: '+56987654321',
  fecha: '2024-12-25',
  hora: '19:30',
  personas: '4'
};

async function testValidation() {
  console.log('üß™ Probando validaci√≥n de datos...\n');

  // Test 1: Datos v√°lidos
  const validResult = validateReservationData(testData);
  console.log('‚úÖ Datos v√°lidos:', validResult.isValid);
  console.log('Errores:', validResult.errors.length === 0 ? 'Ninguno' : validResult.errors);

  // Test 2: Datos inv√°lidos
  const invalidData = {
    nombre: '', // Inv√°lido
    telefono: '123', // Inv√°lido
    fecha: '2020-01-01', // Fecha pasada
    hora: '', // Vac√≠o
    personas: '15' // Fuera de rango
  };

  const invalidResult = validateReservationData(invalidData);
  console.log('\n‚ùå Datos inv√°lidos:', !invalidResult.isValid);
  console.log('Errores encontrados:', invalidResult.errors);
}

async function testAPIConnection() {
  console.log('\nüîå Probando conexi√≥n con resOS API...\n');

  try {
    // Nota: Esta es una prueba real que crear√° una reserva en resOS
    // Comenta esta l√≠nea si no quieres crear una reserva de prueba
    console.log('‚ö†Ô∏è  ADVERTENCIA: Esta prueba crear√° una reserva real en resOS');
    console.log('üí° Si quieres solo probar la validaci√≥n, ejecuta solo testValidation()');

    const result = await createReservation(testData);

    console.log('‚úÖ Reserva creada exitosamente:');
    console.log('ID:', result._id);
    console.log('Estado:', result.status);
    console.log('Fecha:', result.dateTime);
    console.log('Personas:', result.people);
    console.log('Invitado:', result.guest.name);

  } catch (error) {
    console.log('‚ùå Error al crear reserva:');
    console.log(error.message);

    if (error.message.includes('HTTP 401')) {
      console.log('\nüîë Posible problema con la API key');
      console.log('Verifica que la clave en config.js sea correcta');
    }

    if (error.message.includes('HTTP 422')) {
      console.log('\nüìù Datos rechazados por resOS');
      console.log('Verifica el formato de los datos enviados');
    }
  }
}

async function runTests() {
  console.log('üöÄ Iniciando pruebas de integraci√≥n resOS\n');

  // Ejecutar pruebas de validaci√≥n
  await testValidation();

  // Preguntar si quiere probar la API real
  console.log('\n‚ùì ¬øQuieres probar la conexi√≥n real con resOS API?');
  console.log('Esto crear√° una reserva de prueba en tu cuenta de resOS.');
  console.log('Responde "s√≠" o "no" en el c√≥digo si quieres modificar esta opci√≥n.\n');

  // Por defecto, no ejecutar la prueba real para evitar crear reservas accidentales
  const testRealAPI = false; // Cambia a true para probar la API real

  if (testRealAPI) {
    await testAPIConnection();
  } else {
    console.log('‚è≠Ô∏è  Saltando prueba de API real');
    console.log('üí° Para probar la API real, cambia testRealAPI a true en el c√≥digo');
  }

  console.log('\n‚ú® Pruebas completadas');
  console.log('üìñ Revisa el archivo README.md para m√°s informaci√≥n');
}

// Ejecutar pruebas
runTests().catch(console.error);
